{
  "victron_can_mappings": {
    "0x351": {
      "ChargeVoltageLimit": {
        "tiny_name": "Charge Voltage Limit (CVL)",
        "tiny_type": "-",
        "tiny_scale_unit": "-",
        "victron_field": "ChargeVoltageLimit",
        "victron_type_unit": "un16/0.1V",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["fullyChargedVoltage", "maxCellVoltage", "bmsTemp", "minChargeVoltage"],
        "scale_tiny_to_can": "-",
        "formula": "CVL = max(minChargeVoltage, fullyChargedVoltage - fV(maxCellVoltage) - fT(bmsTemp))",
        "can_priority": 1,
        "comment": "Dynamic CVL per code (reduce via cell V & temp)",
        "related_tiny_regs": ["40", "41", "48"]
      },
      "MaxChargeCurrent": {
        "tiny_reg": "103",
        "tiny_name": "Max Charge Current",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "0.1 A",
        "victron_field": "MaxChargeCurrent CCL",
        "victron_type_unit": "sn16/0.1A",
        "offset": 2,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["maxChargeCurrent", "bmsTemp", "soc"],
        "scale_tiny_to_can": "×1→(0.1A)",
        "formula": "CCL = min(maxChargeCurrent, tempDerate, socDerate)",
        "can_priority": 1,
        "comment": "Positive value expected by Victron",
        "related_tiny_regs": ["46", "48"]
      },
      "MaxDischargeCurrent": {
        "tiny_reg": "102",
        "tiny_name": "Max Discharge Current",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "0.1 A",
        "victron_field": "MaxDischargeCurrent DCL",
        "victron_type_unit": "sn16/0.1A",
        "offset": 4,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["maxDischargeCurrent", "bmsTemp", "soc"],
        "scale_tiny_to_can": "×1→(0.1A)",
        "formula": "DCL = min(maxDischargeCurrent, tempDerate, socDerate)",
        "can_priority": 1,
        "comment": "Positive value expected by Victron",
        "related_tiny_regs": ["46", "48"]
      }
    },
    "0x355": {
      "SOC": {
        "tiny_reg": "46",
        "tiny_name": "State Of Charge",
        "tiny_type": "UINT32",
        "tiny_scale_unit": "0.002 %",
        "victron_field": "SOC",
        "victron_type_unit": "un16/%",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": "-",
        "scale_tiny_to_can": "×0.002→% (round)",
        "formula": "SOC from Tiny high-res",
        "can_priority": 2,
        "comment": "Also fill hi-res if used"
      },
      "SOH": {
        "tiny_reg": "45",
        "tiny_name": "State Of Health",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "0.002 %",
        "victron_field": "SOH",
        "victron_type_unit": "un16/%",
        "offset": 2,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": "-",
        "scale_tiny_to_can": "×0.002→% (round)",
        "formula": "SOH from Tiny",
        "can_priority": 2,
        "comment": "—"
      }
    },
    "0x356": {
      "BatteryVoltage": {
        "tiny_reg": "36",
        "tiny_name": "Battery Pack Voltage",
        "tiny_type": "FLOAT",
        "tiny_scale_unit": "1 V",
        "victron_field": "BatteryVoltage",
        "victron_type_unit": "sn16/0.01V",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": "-",
        "scale_tiny_to_can": "×100",
        "formula": "Quantize to 0.01 V",
        "can_priority": 2,
        "comment": "—"
      },
      "BatteryCurrent": {
        "tiny_reg": "38",
        "tiny_name": "Battery Pack Current",
        "tiny_type": "FLOAT",
        "tiny_scale_unit": "0.1 A",
        "victron_field": "BatteryCurrent",
        "victron_type_unit": "sn16/0.1A",
        "offset": 2,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": "-",
        "scale_tiny_to_can": "×10",
        "formula": "Sign: charge + / discharge –",
        "can_priority": 2,
        "comment": "—"
      },
      "BatteryTemperature": {
        "tiny_reg": "48",
        "tiny_name": "Internal Temperature",
        "tiny_type": "INT16",
        "tiny_scale_unit": "0.1 °C",
        "victron_field": "BatteryTemperature",
        "victron_type_unit": "sn16/0.1°C",
        "offset": 4,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": "-",
        "scale_tiny_to_can": "×1→(0.1°C)",
        "formula": "—",
        "can_priority": 2,
        "comment": "—"
      }
    },
    "0x35A": {
      "BatteryHighVoltageAlarm": {
        "tiny_reg": "36.315",
        "tiny_name": "Battery High Voltage Alarm",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighVoltageAlarm",
        "victron_type_unit": "bits2",
        "offset": 0,
        "bits": 2,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packVoltage", "highVoltageCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if packVoltage > highVoltageCutoff then 1 else 0",
        "can_priority": 3,
        "comment": "Alarm (hard threshold)",
        "related_tiny_regs": ["36", "315"]
      },
      "BatteryLowVoltageAlarm": {
        "tiny_reg": "36.316",
        "tiny_name": "Battery Low Voltage Alarm",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryLowVoltageAlarm",
        "victron_type_unit": "bits2",
        "offset": 0,
        "bits": 4,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packVoltage", "lowVoltageCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if packVoltage < lowVoltageCutoff then 1 else 0",
        "can_priority": 3,
        "comment": "Alarm (hard threshold)",
        "related_tiny_regs": ["36", "316"]
      },
      "BatteryHighTempAlarm": {
        "tiny_reg": "113.318",
        "tiny_name": "Battery High Temperature Alarm",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighTempAlarm",
        "victron_type_unit": "bits2",
        "offset": 0,
        "bits": 6,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["maxTemp", "highTempCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if maxTemp > highTempCutoff then 1 else 0",
        "can_priority": 3,
        "comment": "Alarm from Tiny temperature set",
        "related_tiny_regs": ["48", "319"]
      },
      "BatteryLowTempAlarm": {
        "tiny_reg": "113.319",
        "tiny_name": "Battery Low Temperature Alarm",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryLowTempAlarm",
        "victron_type_unit": "bits2",
        "offset": 1,
        "bits": "0-1",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["minTemp", "lowTempCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if minTemp < lowTempCutoff then 1 else 0",
        "can_priority": 3,
        "comment": "Alarm from Tiny temperature set",
        "related_tiny_regs": ["48", "320"]
      },
      "BatteryHighTempChargeAlarm": {
        "tiny_reg": "42.319",
        "tiny_name": "Battery High Temp Charge Alarm",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighTempChargeAlarm",
        "victron_type_unit": "bits2",
        "offset": 1,
        "bits": 2,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["externalTemp", "highTempChargeCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if externalTemp > highTempChargeCutoff then 1 else 0",
        "can_priority": 3,
        "comment": "Charge temp alarm",
        "related_tiny_regs": ["42", "319"]
      },
      "BatteryLowTempChargeWarning": {
        "tiny_reg": "42.32",
        "tiny_name": "Battery Low Temp Charge Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryLowTempChargeWarning",
        "victron_type_unit": "bits2",
        "offset": 5,
        "bits": 4,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["externalTemp", "lowTempChargeCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if externalTemp < lowTempChargeCutoff then 1 else 0",
        "can_priority": 4,
        "comment": "Charge temp warning",
        "related_tiny_regs": ["42", "320"]
      },
      "BatteryHighCurrentAlarm": {
        "tiny_reg": "38.317",
        "tiny_name": "Battery High Current Alarm",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighCurrentAlarm",
        "victron_type_unit": "bits2",
        "offset": 1,
        "bits": 6,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packCurrent", "overCurrentCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if packCurrent > overCurrentCutoff then 1 else 0",
        "can_priority": 3,
        "comment": "Over-current alarm",
        "related_tiny_regs": ["38", "317"]
      },
      "BatteryHighChargeCurrentAlarm": {
        "tiny_reg": "38.318",
        "tiny_name": "Battery High Charge Current Alarm",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighChargeCurrentAlarm",
        "victron_type_unit": "bits2",
        "offset": 2,
        "bits": "0-1",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packCurrent", "overChargeCurrentCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if packCurrent > overChargeCurrentCutoff then 1 else 0",
        "can_priority": 3,
        "comment": "Charge over-current alarm",
        "related_tiny_regs": ["38", "318"]
      },
      "CellImbalanceAlarm": {
        "tiny_reg": "52",
        "tiny_name": "Cell Imbalance Alarm",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "CellImbalanceAlarm",
        "victron_type_unit": "bits2",
        "offset": 3,
        "bits": "0-1",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["balancingState"],
        "scale_tiny_to_can": "-",
        "formula": "if balancingState != 0 then 1 else 0",
        "can_priority": 4,
        "comment": "Imbalance present"
      },
      "BatteryHighVoltageWarning": {
        "tiny_reg": "36.315",
        "tiny_name": "Battery High Voltage Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighVoltageWarning",
        "victron_type_unit": "bits2",
        "offset": 4,
        "bits": 2,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packVoltage", "highVoltageCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if packVoltage > (highVoltageCutoff*0.8) then 1 else 0",
        "can_priority": 4,
        "comment": "Early warning @80%",
        "related_tiny_regs": ["36", "315"]
      },
      "BatteryLowVoltageWarning": {
        "tiny_reg": "36.316",
        "tiny_name": "Battery Low Voltage Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryLowVoltageWarning",
        "victron_type_unit": "bits2",
        "offset": 4,
        "bits": 4,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packVoltage", "lowVoltageCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if packVoltage < (lowVoltageCutoff*1.2) then 1 else 0",
        "can_priority": 4,
        "comment": "Early warning @120%",
        "related_tiny_regs": ["36", "316"]
      },
      "BatteryHighTempWarning": {
        "tiny_reg": "113.318",
        "tiny_name": "Battery High Temperature Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighTempWarning",
        "victron_type_unit": "bits2",
        "offset": 4,
        "bits": 6,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["maxTemp", "highTempCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if maxTemp > (highTempCutoff*0.8) then 1 else 0",
        "can_priority": 4,
        "comment": "Early warning @80%",
        "related_tiny_regs": ["48", "319"]
      },
      "BatteryLowTempWarning": {
        "tiny_reg": "113.319",
        "tiny_name": "Battery Low Temperature Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryLowTempWarning",
        "victron_type_unit": "bits2",
        "offset": 5,
        "bits": "0-1",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["minTemp", "lowTempCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if minTemp < (lowTempCutoff*1.2) then 1 else 0",
        "can_priority": 4,
        "comment": "Early warning @120%",
        "related_tiny_regs": ["48", "320"]
      },
      "BatteryHighTempChargeWarning": {
        "tiny_reg": "42.319",
        "tiny_name": "Battery High Temp Charge Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighTempChargeWarning",
        "victron_type_unit": "bits2",
        "offset": 5,
        "bits": 2,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["externalTemp", "highTempChargeCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if externalTemp > (highTempChargeCutoff*0.8) then 1 else 0",
        "can_priority": 4,
        "comment": "Charge warning @80%",
        "related_tiny_regs": ["42", "319"]
      },
      "BatteryLowTempChargeWarning": {
        "tiny_reg": "42.32",
        "tiny_name": "Battery Low Temp Charge Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryLowTempChargeWarning",
        "victron_type_unit": "bits2",
        "offset": 5,
        "bits": 4,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["externalTemp", "lowTempChargeCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if externalTemp < (lowTempChargeCutoff*1.2) then 1 else 0",
        "can_priority": 4,
        "comment": "Charge warning @120%",
        "related_tiny_regs": ["42", "320"]
      },
      "BatteryHighCurrentWarning": {
        "tiny_reg": "38.317",
        "tiny_name": "Battery High Current Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighCurrentWarning",
        "victron_type_unit": "bits2",
        "offset": 5,
        "bits": 6,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packCurrent", "overCurrentCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if packCurrent > (overCurrentCutoff*0.8) then 1 else 0",
        "can_priority": 4,
        "comment": "Current warning @80%",
        "related_tiny_regs": ["38", "317"]
      },
      "BatteryHighChargeCurrentWarning": {
        "tiny_reg": "38.318",
        "tiny_name": "Battery High Charge Current Warning",
        "tiny_type": "UINT8",
        "tiny_scale_unit": "-",
        "victron_field": "BatteryHighChargeCurrentWarning",
        "victron_type_unit": "bits2",
        "offset": 6,
        "bits": "0-1",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packCurrent", "overChargeCurrentCutoff"],
        "scale_tiny_to_can": "-",
        "formula": "if packCurrent > (overChargeCurrentCutoff*0.8) then 1 else 0",
        "can_priority": 4,
        "comment": "Charge current warning @80%",
        "related_tiny_regs": ["38", "318"]
      },
      "BMSInternalWarning": {
        "tiny_reg": "50",
        "tiny_name": "BMS Internal Warning",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "-",
        "victron_field": "BMSInternalWarning",
        "victron_type_unit": "bits2",
        "offset": 6,
        "bits": 6,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["systemStatusCode"],
        "scale_tiny_to_can": "-",
        "formula": "if systemStatusCode == 0x9B then 1 else 0",
        "can_priority": 4,
        "comment": "As per your table"
      },
      "CellImbalanceWarning": {
        "tiny_reg": "51",
        "tiny_name": "Need Balancing",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "-",
        "victron_field": "CellImbalanceWarning",
        "victron_type_unit": "bits2",
        "offset": 7,
        "bits": "0-1",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["balancingDecision"],
        "scale_tiny_to_can": "-",
        "formula": "if balancingDecision != 0 then 1 else 0",
        "can_priority": 4,
        "comment": "Needs balancing"
      },
      "SystemStatus": {
        "tiny_reg": "50",
        "tiny_name": "System Status (online/offline)",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "-",
        "victron_field": "SystemStatus",
        "victron_type_unit": "bits2",
        "offset": 7,
        "bits": 2,
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["systemStatusCode"],
        "scale_tiny_to_can": "-",
        "formula": "if systemStatusCode != 0x9B then 1 else 0",
        "can_priority": 3,
        "comment": "Online if code != 0x9B"
      }
    },
    "0x35E": {
      "ManufacturerName": {
        "tiny_reg": "500",
        "tiny_name": "Manufacturer Name",
        "tiny_type": "STRING(8)",
        "tiny_scale_unit": "ASCII",
        "victron_field": "ManufacturerName",
        "victron_type_unit": "ASCII",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": "-",
        "scale_tiny_to_can": "-",
        "formula": "Constant (8 chars, pad with 0)",
        "can_priority": 5,
        "comment": "E.g., \"TinyBMS\" or project name"
      }
    },
    "0x35F": {
      "FirmwareVersion": {
        "tiny_reg": "501.502",
        "tiny_name": "Firmware Version",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "-",
        "victron_field": "FirmwareVersion",
        "victron_type_unit": "un16",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": ["firmwareMajor", "firmwareMinor"],
        "scale_tiny_to_can": "-",
        "formula": "firmware = (major<<8)|minor",
        "can_priority": 5,
        "comment": "Per your code"
      }
    },
    "0x371": {
      "OnlineCapacity": {
        "tiny_reg": "306",
        "tiny_name": "Online Capacity",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "0.01 Ah",
        "victron_field": "OnlineCapacity",
        "victron_type_unit": "un16/Ah",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": "reg306",
        "scale_tiny_to_can": "-",
        "formula": "onlineCapacity = reg306*100",
        "can_priority": 5,
        "comment": "Keep if you really use 0x371 this way"
      }
    },
    "0x378": {
      "EnergyIn": {
        "tiny_name": "Energy In",
        "tiny_type": "—",
        "tiny_scale_unit": "—",
        "victron_field": "EnergyIn",
        "victron_type_unit": "un32/100Wh",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packVoltage", "packCurrent", "Δt"],
        "scale_tiny_to_can": "-",
        "formula": "E_in += max(packCurrent,0)*packVoltage*Δt/3600",
        "can_priority": 5,
        "comment": "Cumulative energy in",
        "related_tiny_regs": ["36", "38"]
      },
      "EnergyOut": {
        "tiny_name": "Energy Out",
        "tiny_type": "—",
        "tiny_scale_unit": "—",
        "victron_field": "EnergyOut",
        "victron_type_unit": "un32/100Wh",
        "offset": 4,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["packVoltage", "packCurrent", "Δt"],
        "scale_tiny_to_can": "-",
        "formula": "E_out += max(-packCurrent,0)*packVoltage*Δt/3600",
        "can_priority": 5,
        "comment": "Cumulative energy out",
        "related_tiny_regs": ["36", "38"]
      }
    },
    "0x379": {
      "InstalledCapacity": {
        "tiny_name": "Installed Capacity",
        "tiny_type": "UINT16",
        "tiny_scale_unit": "Ah",
        "victron_field": "InstalledCapacity",
        "victron_type_unit": "un16/Ah",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Compute",
        "compute_inputs": ["nominalCapacity", "stateOfHealth"],
        "scale_tiny_to_can": "-",
        "formula": "installedCapacity = nominalCapacity * SOH / 100",
        "can_priority": 5,
        "comment": "Installed capacity (nominal × SOH)",
        "related_tiny_regs": ["306", "45"]
      }
    },
    "0x382": {
      "BatteryFamily": {
        "tiny_reg": "502",
        "tiny_name": "Battery Family",
        "tiny_type": "STRING(8)",
        "tiny_scale_unit": "ASCII",
        "victron_field": "BatteryFamily",
        "victron_type_unit": "ASCII",
        "offset": 0,
        "bits": "-",
        "direction": "TX",
        "mapping_type": "Direct",
        "compute_inputs": "-",
        "scale_tiny_to_can": "-",
        "formula": "Constant family (8 chars)",
        "can_priority": 5,
        "comment": "e.g., \"LiFePO4\""
      }
    }
  },
  "input_only_regs": {
    "40": {
      "tiny_name": "Min Cell Voltage",
      "tiny_type": "UINT16",
      "tiny_scale_unit": "1 mV",
      "direction": "InputOnly",
      "comment": "Use if you add CAN 0x373 (recommended)"
    },
    "41": {
      "tiny_name": "Max Cell Voltage",
      "tiny_type": "UINT16",
      "tiny_scale_unit": "1 mV",
      "direction": "InputOnly",
      "comment": "Use if you add CAN 0x373 (recommended)"
    },
    "42": {
      "tiny_name": "External Temperature #1",
      "tiny_type": "INT16",
      "tiny_scale_unit": "0.1 °C",
      "direction": "InputOnly",
      "comment": "Optional for 0x373 min/max temperatures"
    }
  },
  "rx_msgs": {
    "0x305": {
      "victron_field": "KeepAlive",
      "direction": "RX",
      "comment": "Present in Victron spec (RX)"
    },
    "0x307": {
      "victron_field": "Handshake",
      "direction": "RX",
      "comment": "Present in Victron spec (RX)"
    }
  }
}
